// Generated by CoffeeScript 1.10.0
(function() {
  var Node, Tree, binarysearchtree;

  Node = (function() {
    Node.prototype.left = null;

    Node.prototype.right = null;

    Node.prototype.data = null;

    function Node(data1) {
      this.data = data1;
    }

    Node.prototype.isLeaf = function() {
      return (this.left == null) && (this.right == null);
    };

    return Node;

  })();

  Tree = (function() {
    Tree.prototype.root = null;

    function Tree() {
      this.root = new Node();
    }

    Tree.prototype.insert = function(data, node) {
      var newNode;
      if (node == null) {
        node = this.root;
      }
      if (node.data == null) {
        return node.data = data;
      }
      newNode = new Node(data);
      if (data < node.data) {
        if (node.left == null) {
          node.left = newNode;
        } else {
          this.insert(data, node.left);
        }
      } else {
        if (node.right == null) {
          node.right = newNode;
        } else {
          this.insert(data, node.right);
        }
      }
      return node;
    };

    Tree.prototype.search = function(data, current) {
      if (current == null) {
        current = this.root;
      }
      if (data === current.data) {
        return true;
      }
      if ((current.left == null) && (current.right == null)) {
        return false;
      }
      if (data < current.data) {
        return this.search(data, current.left);
      }
      return this.search(data, current.right);
    };

    return Tree;

  })();

  binarysearchtree = {
    Node: Node,
    Tree: Tree
  };

  window.binarysearchtree = binarysearchtree;

}).call(this);
